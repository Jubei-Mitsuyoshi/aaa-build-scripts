#!/bin/bash


Usage() {
  cat <<EOF
usage: ${0##*/} [options] </path/to/pkg/dir>

   
  This script downloads and modifies and installs
  the packages needed to run pup volume manager
  in native mode ie without gvfs or udisks
  

EOF
}



if [[ $1 = @(-h|--help) ]]; then
  Usage
  exit 1
fi

#source common functions
if [[ -r /usr/bin/aaa-common-functions ]]; then
	. /usr/bin/aaa-common-functions
	if [[ ! $? -eq 0 ]]; then
		echo " failed to source common functions at /usr/bin/aaa-common-functions"
		echo "quitting !! "
		exit 1
	fi
else
	echo " failed to find common functions at /usr/bin/aaa-common-functions"
	echo "quitting !! "
	exit 1
fi

#source config
if [ -r /etc/aaa-master-config ]; then
  Info "found my master config file.. reading it"
  . /etc/aaa-master-config
	if [ -r $HOME/.aaa-local-config ]; then
		Info "found a local settings file.. reading it"
		. $HOME/.aaa-local-config
	fi
else
	Fuck "Failed to find master config file quitting"
	exit 1
fi

#source settings
if [ -r $HOME/.aaa_settings ]; then
  Info "found a settings file.. reading it"
  . $HOME/.aaa_settings
fi

#MUST BE BEFORE SWITCH DISTRO IS CALLED
rm -rf $HOME/.pbuilderrc

# get options and arguments http://wiki.bash-hackers.org/howto/getopts_tutorial

while getopts ":d:cuqlgw" opt; do
  case $opt in
    d) Info "< -d $OPTARG > passed" 
		case $OPTARG in
	kali|testing|unstable|stable|ubuntu) Info "-d $OPTARG is valid, building for $OPTARG"
										SwitchDistro "$OPTARG" ;;
									  *) Fuck "<-d $OPTARG> is not valid, needs to be <-d kali,stable,unstable,testing or ubuntu>" ;;
		esac ;;
	c) clean="-c" ;;
	u) update=1 ;;
	q) quiet=1 ;;
	l) add_to_home_repo=1 ;;
	g) add_to_git_repo=1 ;;
	w) add_to_work_repo=1 ;;
   \?) Fuck "Invalid option: -$OPTARG" ;;
    :) Fuck "Option -$OPTARG requires a distro name, kali,stable,unstable,testing or ubuntu" ;;
  esac
done
#shift the options and args out the way http://wiki.bash-hackers.org/howto/getopts_tutorial
shift $((OPTIND-1))
#and lets parse it

[[ -z $1 ]] && Fuck "need directory target"
[[ -d $1/debian ]] || Fuck "target dir does not contain a debian subdir"




########## end of common header #############################################################################################################################################

[[ "$(id -u)" != "0" ]] && Fuck "This script must be run as root"
	
	
	#check script dependencies
	CheckMyDeps "reprepro pbuilder dpkg-source dpkg-parsechangelog"
	[[ $aaa_setup_build_base_complete == yes ]] || Fuck "this script needs the base build environment setup, run aaa_setup-build-base"
	[[ $aaa_setup_build_env_complete == "yes" ]] || Fuck "this script needs the build environment setup, run aaa-setup-build-env"



mod_file_list="libgnome2-0 gnome-applets"


#setup working dir

CleanMyBuildArea
MakeADir "$aaa_pupvm_cache_dir/$aaa_debian_distro/$bdate"

#update / create base immage
UpdateBase

cd "$aaa_work_dir"


for pkg_working in $mod_file_list ; do
	Test apt-get download $pkg_working
	pkg_name=$(find . -maxdepth 1 -mindepth 1 -type f)
	ProcessBeb $aaa_work_dir ${pkg_name#./}
	Test dpkg -i ${pkg_name#./}
	find . -maxdepth 1 -mindepth 1 -type f -exec mv -f '{}' "$aaa_pupvm_cache_dir/$aaa_debian_distro/$bdate" \;
done

cd $HOME

DownLoad "http://ftp.dk.debian.org/debian/pool/main/g/gnome-disk-utility/gnome-disk-utility_3.0.2-3_amd64.deb"
gdebi -o="--no-upgrade --no-install-recommends" -n gnome-disk-utility_3.0.2-3_amd64.deb



#gdebi -o="--no-upgrade --no-install-recommends" -n *.deb





