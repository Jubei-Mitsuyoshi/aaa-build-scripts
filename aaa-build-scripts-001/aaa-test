#!/bin/bash

################ common header identical except for usage, getopts etc #########################################################################################################


Usage() {
  cat <<EOF
usage: ${0##*/} [options] </path/to/pkg/dir.../path/to/pkg/dir>

  -d < distro >
  -d <backport build to selected distro
	kali|stable|testing
	default build is unstable>
  
  -q <supress normal output, just print
  names of files sucsessfully built and 
  processed>
  
  -u <update/create pbuilder immage before
   build>
   
   -c <just check the package for packaging
   correcly ie dpkg-source -b implies no quiet>
   
   -G <git build ie include to git component>
   
  ****repo flags*****
  -l < include built .changes to home repo,
	basedir=aaa_home_repo_dir
	distro=aaa_debian_distro
	only effective if repo dir set in
	aaa-master-config
	
  -g <also include packages into git repo>
	basedir=aaa_git_repo_dir
	distro=aaa_debian_distro
	only effective if repo dir set in
	aaa-master-config
  
  -w <also include packages into work repo>
	basedir=aaa_work_repo_dir
	distro=work
	only effective if repo dir set in
	aaa-master-config
  
  aaa_debian_distro
	sourced from /etc/aaa-master-config
	<aaa_debian_distro> overwrtten by -d
	< distro > >
   
  This script uses pbuilder and reprepro
  to build the package in the current dir
  result is found at the location
  specified in aaa-master-configure
  as aaa_build_result
  

EOF
}



if [[ $1 = @(-h|--help) ]]; then
  Usage
  exit 1
fi

#source common functions
if [[ -r /usr/bin/aaa-common-functions ]]; then
	. /usr/bin/aaa-common-functions
	if [[ ! $? -eq 0 ]]; then
		echo " failed to source common functions at /usr/bin/aaa-common-functions"
		echo "quitting !! "
		exit 1
	fi
else
	echo " failed to find common functions at /usr/bin/aaa-common-functions"
	echo "quitting !! "
	exit 1
fi

#source config
if [ -r /etc/aaa-master-config ]; then
  Info "found my master config file.. reading it"
  . /etc/aaa-master-config
	if [ -r $HOME/.aaa-local-config ]; then
		Info "found a local settings file.. reading it"
		. $HOME/.aaa-local-config
	fi
else
	Fuck "Failed to find master config file quitting"
	exit 1
fi

#source settings
if [ -r $HOME/.aaa_settings ]; then
  Info "found a settings file.. reading it"
  . $HOME/.aaa_settings
fi

####
aaa_component="main"

# get options and arguments http://wiki.bash-hackers.org/howto/getopts_tutorial

while getopts ":d:uqlgwcG" opt; do
  case $opt in
        d) Info "< -d $OPTARG > passed" 
		case $OPTARG in
	kali|stable|testing) Info "-d $OPTARG is valid, building backport for $OPTARG"
							new_distro="$OPTARG" ;;
					*) Fuck "<-d $OPTARG> is not valid, needs to be <-d kali,stable,unstable,testing or ubuntu>" ;;
		esac ;;
	u) update=1 ;;
	q) quiet=1 ;;
	l) if [[ -z  "$aaa_home_repo_dir" ]]; then
			Warn "/etc/aaa-master-config has no reference for aaa_home_repo_dir"
			Warn "if you continue your home repo will not be used "
			AnyKey
		else
			add_to_home_repo=1
		fi ;;
	g) if [[ -z  "$aaa_git_repo_dir" ]]; then
			Warn "/etc/aaa-master-config has no reference for aaa_git_repo_dir"
			Warn "if you continue your home repo will not be used "
			AnyKey
		else
			add_to_git_repo=1
		fi ;;
	w) if [[ -z  "$aaa_work_repo_dir" ]]; then
			Warn "/etc/aaa-master-config has no reference for aaa_work_repo_dir"
			Warn "if you continue your work repo will not be used "
			AnyKey
		else
			add_to_work_repo=1
		fi ;;
	c) check=1 
		quiet=0;;
	G) git_build=1 ;;
   \?) Fuck "Invalid option: -$OPTARG" ;;
    :) Fuck "Option -$OPTARG requires a distro name, kali,stable,unstable,testing or ubuntu" ;;
  esac
done

#sort vars


if [[ $git_build -eq 1 ]]; then 
	if [[ $new_distro ]]; then
		SwitchDistro "$new_distro"
		aaa_component="$aaa_debian_distro"git
	else
		aaa_component="$aaa_default_distro"git
	fi
else
	if [[ $new_distro ]]; then
		SwitchDistro "$new_distro"
		aaa_component="$aaa_debian_distro"
	else
		aaa_component="unstable"
		rm -f "$HOME/.pbuilderrc"
	fi
fi
#shift the options and args out the way http://wiki.bash-hackers.org/howto/getopts_tutorial
shift $((OPTIND-1))
#and lets parse it

AutoIncludeHome
AutoIncludeWork
AutoIncludeGit



